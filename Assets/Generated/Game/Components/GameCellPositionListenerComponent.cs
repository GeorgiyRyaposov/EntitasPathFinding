//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CellPositionListenerComponent cellPositionListener { get { return (CellPositionListenerComponent)GetComponent(GameComponentsLookup.CellPositionListener); } }
    public bool hasCellPositionListener { get { return HasComponent(GameComponentsLookup.CellPositionListener); } }

    public void AddCellPositionListener(System.Collections.Generic.List<ICellPositionListener> newValue) {
        var index = GameComponentsLookup.CellPositionListener;
        var component = (CellPositionListenerComponent)CreateComponent(index, typeof(CellPositionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCellPositionListener(System.Collections.Generic.List<ICellPositionListener> newValue) {
        var index = GameComponentsLookup.CellPositionListener;
        var component = (CellPositionListenerComponent)CreateComponent(index, typeof(CellPositionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCellPositionListener() {
        RemoveComponent(GameComponentsLookup.CellPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCellPositionListener;

    public static Entitas.IMatcher<GameEntity> CellPositionListener {
        get {
            if (_matcherCellPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CellPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCellPositionListener = matcher;
            }

            return _matcherCellPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCellPositionListener(ICellPositionListener value) {
        var listeners = hasCellPositionListener
            ? cellPositionListener.value
            : new System.Collections.Generic.List<ICellPositionListener>();
        listeners.Add(value);
        ReplaceCellPositionListener(listeners);
    }

    public void RemoveCellPositionListener(ICellPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = cellPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCellPositionListener();
        } else {
            ReplaceCellPositionListener(listeners);
        }
    }
}
