//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GridsCellStateListenerComponent gridsCellStateListener { get { return (GridsCellStateListenerComponent)GetComponent(GameComponentsLookup.GridsCellStateListener); } }
    public bool hasGridsCellStateListener { get { return HasComponent(GameComponentsLookup.GridsCellStateListener); } }

    public void AddGridsCellStateListener(System.Collections.Generic.List<IGridsCellStateListener> newValue) {
        var index = GameComponentsLookup.GridsCellStateListener;
        var component = (GridsCellStateListenerComponent)CreateComponent(index, typeof(GridsCellStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGridsCellStateListener(System.Collections.Generic.List<IGridsCellStateListener> newValue) {
        var index = GameComponentsLookup.GridsCellStateListener;
        var component = (GridsCellStateListenerComponent)CreateComponent(index, typeof(GridsCellStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGridsCellStateListener() {
        RemoveComponent(GameComponentsLookup.GridsCellStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridsCellStateListener;

    public static Entitas.IMatcher<GameEntity> GridsCellStateListener {
        get {
            if (_matcherGridsCellStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridsCellStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridsCellStateListener = matcher;
            }

            return _matcherGridsCellStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGridsCellStateListener(IGridsCellStateListener value) {
        var listeners = hasGridsCellStateListener
            ? gridsCellStateListener.value
            : new System.Collections.Generic.List<IGridsCellStateListener>();
        listeners.Add(value);
        ReplaceGridsCellStateListener(listeners);
    }

    public void RemoveGridsCellStateListener(IGridsCellStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gridsCellStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGridsCellStateListener();
        } else {
            ReplaceGridsCellStateListener(listeners);
        }
    }
}
