//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Grids.CellComponent gridsCell { get { return (Grids.CellComponent)GetComponent(GameComponentsLookup.GridsCell); } }
    public bool hasGridsCell { get { return HasComponent(GameComponentsLookup.GridsCell); } }

    public void AddGridsCell(bool newWalkable) {
        var index = GameComponentsLookup.GridsCell;
        var component = (Grids.CellComponent)CreateComponent(index, typeof(Grids.CellComponent));
        component.Walkable = newWalkable;
        AddComponent(index, component);
    }

    public void ReplaceGridsCell(bool newWalkable) {
        var index = GameComponentsLookup.GridsCell;
        var component = (Grids.CellComponent)CreateComponent(index, typeof(Grids.CellComponent));
        component.Walkable = newWalkable;
        ReplaceComponent(index, component);
    }

    public void RemoveGridsCell() {
        RemoveComponent(GameComponentsLookup.GridsCell);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridsCell;

    public static Entitas.IMatcher<GameEntity> GridsCell {
        get {
            if (_matcherGridsCell == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridsCell);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridsCell = matcher;
            }

            return _matcherGridsCell;
        }
    }
}
