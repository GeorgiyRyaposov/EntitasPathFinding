//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Grids.CellState gridsCellState { get { return (Grids.CellState)GetComponent(GameComponentsLookup.GridsCellState); } }
    public bool hasGridsCellState { get { return HasComponent(GameComponentsLookup.GridsCellState); } }

    public void AddGridsCellState(int newValue) {
        var index = GameComponentsLookup.GridsCellState;
        var component = (Grids.CellState)CreateComponent(index, typeof(Grids.CellState));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGridsCellState(int newValue) {
        var index = GameComponentsLookup.GridsCellState;
        var component = (Grids.CellState)CreateComponent(index, typeof(Grids.CellState));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGridsCellState() {
        RemoveComponent(GameComponentsLookup.GridsCellState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGridsCellState;

    public static Entitas.IMatcher<GameEntity> GridsCellState {
        get {
            if (_matcherGridsCellState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GridsCellState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGridsCellState = matcher;
            }

            return _matcherGridsCellState;
        }
    }
}
