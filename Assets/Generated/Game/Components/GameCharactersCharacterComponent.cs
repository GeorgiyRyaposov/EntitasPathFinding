//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Characters.CharacterComponent charactersCharacter { get { return (Characters.CharacterComponent)GetComponent(GameComponentsLookup.CharactersCharacter); } }
    public bool hasCharactersCharacter { get { return HasComponent(GameComponentsLookup.CharactersCharacter); } }

    public void AddCharactersCharacter(bool newActive, int newType) {
        var index = GameComponentsLookup.CharactersCharacter;
        var component = (Characters.CharacterComponent)CreateComponent(index, typeof(Characters.CharacterComponent));
        component.Active = newActive;
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceCharactersCharacter(bool newActive, int newType) {
        var index = GameComponentsLookup.CharactersCharacter;
        var component = (Characters.CharacterComponent)CreateComponent(index, typeof(Characters.CharacterComponent));
        component.Active = newActive;
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveCharactersCharacter() {
        RemoveComponent(GameComponentsLookup.CharactersCharacter);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharactersCharacter;

    public static Entitas.IMatcher<GameEntity> CharactersCharacter {
        get {
            if (_matcherCharactersCharacter == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharactersCharacter);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharactersCharacter = matcher;
            }

            return _matcherCharactersCharacter;
        }
    }
}
