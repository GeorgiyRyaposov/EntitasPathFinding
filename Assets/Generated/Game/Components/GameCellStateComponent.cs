//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Grids.CellState cellState { get { return (Grids.CellState)GetComponent(GameComponentsLookup.CellState); } }
    public bool hasCellState { get { return HasComponent(GameComponentsLookup.CellState); } }

    public void AddCellState(int newValue) {
        var index = GameComponentsLookup.CellState;
        var component = (Grids.CellState)CreateComponent(index, typeof(Grids.CellState));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCellState(int newValue) {
        var index = GameComponentsLookup.CellState;
        var component = (Grids.CellState)CreateComponent(index, typeof(Grids.CellState));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCellState() {
        RemoveComponent(GameComponentsLookup.CellState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCellState;

    public static Entitas.IMatcher<GameEntity> CellState {
        get {
            if (_matcherCellState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CellState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCellState = matcher;
            }

            return _matcherCellState;
        }
    }
}
